version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
  pre_build:
    commands:
#      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
#      - apt-get update
#      - apt-get install -y jq
#      - wget http://www-eu.apache.org/dist/maven/maven-3/3.5.4/binaries/apache-maven-3.5.4-bin.tar.gz
#      - tar xzf apache-maven-3.5.4-bin.tar.gz
#      - ln -s apache-maven-3.5.4 maven
#      - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
#      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
#      - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/       
      - cd gateway
      - mvn clean
      - mvn package
      - echo Logging in to Amazon ECR ....
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - IMAGE_REPO_NAME=jer-gateway
  build:
    commands:
      - echo Build started on `date`
#      - mvn sonar:sonar -Dsonar.projectKey=$PROJECT -Dsonar.host.url=$HOST_SONAR -Dsonar.login=$TOKEN_SONAR
      - echo Building the Docker image...
      - docker build -t $ECR_REPOSITORY_URI:latest .
      - docker tag $ECR_REPOSITORY_URI:latest $ECR_REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $ECR_REPOSITORY_URI:latest
      - docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
      - printf '[{"name":"%s","imageUri":"%s"}]' $IMAGE_REPO_NAME $ECR_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
  files:
    - gateway/imagedefinitions.json
  discard-paths: yes
    
